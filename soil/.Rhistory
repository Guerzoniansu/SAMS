print(hwsd)
class(hwsd); ncol(hwsd); nrow(hwsd); ncell(hwsd)
res(hwsd); ext(hwsd)
st_crs(hwsd)$proj4string
View(hwsd)
hwsd <- rast("./HWSD2_RASTER/HWSD2.bil")
print(hwsd)
hwsd <- rast("./HWSD2_RASTER/HWSD2.bil")
print(hwsd)
hwsd <- rast("./HWSD2_RASTER/HWSD2.bil")
print(hwsd)
hwsd <- rast("./HWSD2_RASTER/hwsd2.bil")
print(hwsd)
rm(list = ls())
require(sf)
require(terra)
round(file.size("./HWSD2_RASTER/hwsd2.bil")/1024^3,2)
file.mtime("./HWSD2_RASTER/hwsd2.bil")
hwsd <- rast("./HWSD2_RASTER/hwsd2.bil")
print(hwsd)
class(hwsd); ncol(hwsd); nrow(hwsd); ncell(hwsd)
res(hwsd); ext(hwsd)
st_crs(hwsd)$proj4string
points <- read.csv("../datasets/A/spam2020V1r0_global_Y_TA.csv")
View(points)
head(points)
vec_points <- vect(points, geom = c("x", "y"), crs = "EPSG:4326")
values <- extract(hwsd, vec_points)
View(values)
nrow(values); ncol(values); st_bbox(values)
nrow(values); ncol(values)
dim(unique(values))
head(values)
plot(values, main = "HWSD v2 map unit codes, Nanjing area")
plot(values, main = "HWSD v2 map unit codes, Nanjing area")
View(values)
values <- cbind(points[, c("x", "y")], values)
nrow(values); ncol(values)
View(values)
values <- extract(hwsd, vec_points)
values <- cbind(points[, c("x", "y")], values)
View(values)
nrow(values); ncol(values)
hwsd.crop <- subst(values, 7001, NA)
hwsd.crop <- rast(values, type = "xyz", crs = "EPSG:4326")
values[values == 7001] <- NA
View(values)
values <- extract(hwsd, vec_points)
values <- cbind(points[, c("x", "y")], values)
nrow(values); ncol(values)
dim(unique(values))
# values[values == 7001] <- NA
layers <- read.csv("./HWSD2_LAYERS/hwsd2_layers.csv")
require(sf)
require(terra)
library(readxl)
# values[values == 7001] <- NA
layers <- read_excel("./HWSD2_LAYERS/hwsd2_layers.xlsx")
smu <- read_excel("./HWSD2_LAYERS/hwsd2_smu.xlsx")
View(layers)
View(layers)
View(layers)
View(values)
layers <- subset(layers,
select = -c(
"ID", "NSC_MU_SOURCE1", "NSC_MU_SOURCE2", "WISE30s_SMU_ID", "HWSD1_SMU_ID",
"NSC", "WRB_PHASES", "WRB4", "WRB2", "FAO90", "ROOT_DEPTH", "PHASE1", "PHASE2",
"ROOTS", "IL", "SWR", "DRAINAGE", "AWC", "LAYER", "TEXTURE_SOTER"
))
colnames(layers)
layers <- layers %>%
select(-c(
ID, NSC_MU_SOURCE1, NSC_MU_SOURCE2, WISE30s_SMU_ID, HWSD1_SMU_ID,
NSC, WRB_PHASES, WRB4, WRB2, FAO90, ROOT_DEPTH, PHASE1, PHASE2,
ROOTS, IL, SWR, DRAINAGE, AWC, LAYER, TEXTURE_SOTER
))
require(sf)
require(terra)
library(readxl)
library(dplyr)
layers <- layers %>%
select(-c(
ID, NSC_MU_SOURCE1, NSC_MU_SOURCE2, WISE30s_SMU_ID, HWSD1_SMU_ID,
NSC, WRB_PHASES, WRB4, WRB2, FAO90, ROOT_DEPTH, PHASE1, PHASE2,
ROOTS, IL, SWR, DRAINAGE, AWC, LAYER, TEXTURE_SOTER
))
View(layers)
View(smu)
smu <- smu %>%
select(c(
HWSD2_SMU_ID, COVERAGE, SHARE, WRB2_CODE, TEXTURE_USDA, REF_BULK_DENSITY, BULK_DENSITY,
ROOT_DEPTH, AWC
))
View(layers)
#| echo: false
#| warning: false
# values[values == 7001] <- NA
layers <- read_excel("./HWSD2_LAYERS/hwsd2_layers.xlsx")
smu <- read_excel("./HWSD2_LAYERS/hwsd2_smu.xlsx")
layers <- layers %>%
select(-c(NSC_MU_SOURCE1, NSC_MU_SOURCE2, WISE30s_SMU_ID, HWSD1_SMU_ID,
NSC, WRB_PHASES, WRB4, WRB2, FAO90, ROOT_DEPTH, PHASE1, PHASE2,
ROOTS, IL, SWR, DRAINAGE, AWC, LAYER, TEXTURE_SOTER
))
smu <- smu %>%
select(c(
ID, HWSD2_SMU_ID, COVERAGE, SHARE, WRB2_CODE, TEXTURE_USDA, REF_BULK_DENSITY, BULK_DENSITY,
ROOT_DEPTH, AWC
))
View(layers)
crop.layers <- merge(values, layers, by="ID")
View(crop.layers)
crop.layers <- merge(values, layers, by="ID", all.x=TRUE)
View(crop.layers)
crop.layers <- merge(layers, value, by="ID")
crop.layers <- merge(layers, values, by="ID")
crop.layers <- merge(values, layers, by="ID", all.x=TRUE)
View(crop.layers)
View(points)
round(file.size("./HWSD_RASTER/hwsd.bil")/1024^3,2)
file.mtime("./HWSD_RASTER/hwsd.bil")
hwsd <- rast("./HWSD_RASTER/hwsd.bil")
print(hwsd)
class(hwsd); ncol(hwsd); nrow(hwsd); ncell(hwsd)
res(hwsd); ext(hwsd)
st_crs(hwsd)$proj4string
vec_points <- vect(points, geom = c("x", "y"), crs = "EPSG:4326")
vec_points <- vect(points, geom = c("x", "y"), crs = "EPSG:4326")
values <- cbind(points[, c("x", "y")], values)
View(values)
values <- extract(hwsd, vec_points)
values <- cbind(points[, c("x", "y")], values)
View(values)
round(file.size("./HWSD2_RASTER/hwsd2.bil")/1024^3,2)
file.mtime("./HWSD2_RASTER/hwsd2.bil")
hwsd <- rast("./HWSD2_RASTER/hwsd2.bil")
print(hwsd)
class(hwsd); ncol(hwsd); nrow(hwsd); ncell(hwsd)
res(hwsd); ext(hwsd)
st_crs(hwsd)$proj4string
round(file.size("./HWSD2_RASTER/hwsd2.bil")/1024^3,2)
file.mtime("./HWSD2_RASTER/hwsd2.bil")
hwsd <- rast("./HWSD2_RASTER/hwsd2.bil")
print(hwsd)
head(points)
vec_points <- vect(points, geom = c("x", "y"), crs = "EPSG:4326")
values <- extract(hwsd, vec_points)
values <- cbind(points[, c("x", "y")], values)
crop.layers <- merge(values, layers, by="ID", all.x=TRUE)
View(crop.layers)
crop.layers <- merge(values, layers, by="HWSD2")
crop.layers <- merge(values, layers, by=c("ID", "HWSD2"), all.x=TRUE)
crop.layers <- merge(values, layers, by="ID", all.x=TRUE)
View(crop.layers)
values <- extract(hwsd, vec_points)
values <- cbind(points[, c("x", "y")], values)
#| echo: false
#| warning: false
# values[values == 7001] <- NA
layers <- read_excel("./HWSD2_LAYERS/hwsd2_layers.xlsx")
smu <- read_excel("./HWSD2_LAYERS/hwsd2_smu.xlsx")
layers <- layers %>%
select(-c(NSC_MU_SOURCE1, NSC_MU_SOURCE2, WISE30s_SMU_ID, HWSD1_SMU_ID,
NSC, WRB_PHASES, WRB4, WRB2, FAO90, ROOT_DEPTH, PHASE1, PHASE2,
ROOTS, IL, SWR, DRAINAGE, AWC, LAYER, TEXTURE_SOTER
))
smu <- smu %>%
select(c(
ID, HWSD2_SMU_ID, COVERAGE, SHARE, WRB2_CODE, TEXTURE_USDA, REF_BULK_DENSITY, BULK_DENSITY,
ROOT_DEPTH, AWC
))
crop.layers <- merge(values, layers, by="ID", all.x=TRUE)
View(crop.layers)
View(hwsd)
hwsd <- rast("./HWSD2_RASTER/HWSD2.bil")
print(hwsd)
values <- extract(hwsd, vec_points)
values <- cbind(points[, c("x", "y")], values)
View(values)
values <- extract(hwsd, vec_points)
View(values)
rm(list = ls())
require(sf)
require(terra)
library(readxl)
library(dplyr)
round(file.size("./HWSD2_RASTER/hwsd2.bil")/1024^3,2)
file.mtime("./HWSD2_RASTER/hwsd2.bil")
hwsd <- rast("./HWSD2_RASTER/HWSD2.bil")
print(hwsd)
class(hwsd); ncol(hwsd); nrow(hwsd); ncell(hwsd)
res(hwsd); ext(hwsd)
st_crs(hwsd)$proj4string
names(hwsd)
points <- read.csv("../datasets/A/spam2020V1r0_global_Y_TA.csv")
head(points)
vec_points <- vect(points, geom = c("x", "y"), crs = "EPSG:4326")
values <- extract(hwsd, vec_points)
View(values)
values <- extract(hwsd, vec_points)
vec_points <- vect(points, geom = c("x", "y"), crs = "+proj=longlat +datum=WGS84 +no_defs")
values <- extract(hwsd, vec_points)
View(values)
View(vec_points)
vec_points@cpp[["names"]]
vec_points <- vect(points, geom = c("lon", "lat"), crs = "+proj=longlat +datum=WGS84 +no_defs")
points <- points %>%
select(c(
x, y
))
View(points)
vec_points <- vect(points, geom = c("x", "y"), crs = "+proj=longlat +datum=WGS84 +no_defs")
View(vec_points)
View(vec_points)
values <- extract(hwsd, vec_points)
View(values)
View(points)
values <- cbind(points[, c("x", "y")], values)
View(values)
nrow(values); ncol(values)
View(values)
#| echo: false
#| warning: false
# values[values == 7001] <- NA
layers <- read_excel("./HWSD2_LAYERS/hwsd2_layers.xlsx")
smu <- read_excel("./HWSD2_LAYERS/hwsd2_smu.xlsx")
layers <- layers %>%
select(-c(NSC_MU_SOURCE1, NSC_MU_SOURCE2, WISE30s_SMU_ID, HWSD1_SMU_ID,
NSC, WRB_PHASES, WRB4, WRB2, FAO90, ROOT_DEPTH, PHASE1, PHASE2,
ROOTS, IL, SWR, DRAINAGE, AWC, LAYER, TEXTURE_SOTER
))
smu <- smu %>%
select(c(
ID, HWSD2_SMU_ID, COVERAGE, SHARE, WRB2_CODE, TEXTURE_USDA, REF_BULK_DENSITY, BULK_DENSITY,
ROOT_DEPTH, AWC
))
crop.layers <- merge(values, layers, by="ID", all.x=TRUE)
View(crop.layers)
View(layers)
rm(list = ls())
require(sf)
require(terra)
library(readxl)
library(dplyr)
round(file.size("./HWSD2_RASTER/hwsd2.bil")/1024^3,2)
file.mtime("./HWSD2_RASTER/hwsd2.bil")
hwsd <- rast("./HWSD2_RASTER/HWSD2.bil")
print(hwsd)
points <- read.csv("../datasets/A/spam2020V1r0_global_Y_TA.csv")
points <- points %>%
select(c(
x, y
))
vec_points <- vect(points, geom = c("x", "y"), crs = "+proj=longlat +datum=WGS84 +no_defs")
values <- extract(hwsd, vec_points)
values <- cbind(points[, c("x", "y")], values)
nrow(values); ncol(values)
dim(unique(values))
head(values)
#| echo: false
#| warning: false
# values[values == 7001] <- NA
layers <- read_excel("./HWSD2_LAYERS/hwsd2_layers.xlsx")
smu <- read_excel("./HWSD2_LAYERS/hwsd2_smu.xlsx")
layers <- layers %>%
select(where(is.numeric), LAYER, HWSD2_SMU_ID)
View(layers)
layers <- layers %>%
select(-c(HWSD1_SMU_ID, ROOT_DEPTH, PHASE1, PHASE2,
ROOTS, IL, SWR, AWC
))
layers <- layers %>%
group_by(LAYER, HWSD2_SMU_ID) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE), .names = "{col}"))
View(layers)
#| echo: false
#| warning: false
# values[values == 7001] <- NA
layers <- read_excel("./HWSD2_LAYERS/hwsd2_layers.xlsx")
smu <- read_excel("./HWSD2_LAYERS/hwsd2_smu.xlsx")
layers[layers < 0] <- NA
layers <- layers %>%
select(where(is.numeric), LAYER, HWSD2_SMU_ID)
layers <- layers %>%
select(-c(HWSD1_SMU_ID, ROOT_DEPTH, PHASE1, PHASE2,
ROOTS, IL, SWR, AWC
))
layers <- layers %>%
group_by(LAYER, HWSD2_SMU_ID) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE), .names = "{col}"))
layers[layers == "NaN"] <- NA
View(layers)
View(layers)
install.packages("tidyr")
require(sf)
require(terra)
library(readxl)
library(dplyr)
library(tidyr)
layers <- layers %>%
pivot_wider(
id_cols = c(HWSD2_SMU_ID),
names_from = LAYER,
values_from = select(., -HWSD2_SMU_ID, -LAYER))
View(layers)
layers <- layers %>%
pivot_wider(
id_cols = c(HWSD2_SMU_ID),
names_from = LAYER,
values_from = all_of(names(layers)[!names(layers) %in% c("HWSD2_SMU_ID", "LAYER")]))
View(layers)
#| echo: false
#| warning: false
# values[values == 7001] <- NA
layers <- read_excel("./HWSD2_LAYERS/hwsd2_layers.xlsx")
smu <- read_excel("./HWSD2_LAYERS/hwsd2_smu.xlsx")
layers[layers < 0] <- NA
layers <- layers %>%
select(where(is.numeric), LAYER, HWSD2_SMU_ID)
layers <- layers %>%
select(-c(ID, HWSD1_SMU_ID, ROOT_DEPTH, PHASE1, PHASE2,
ROOTS, IL, SWR, AWC
))
layers <- layers %>%
group_by(LAYER, HWSD2_SMU_ID) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE), .names = "{col}"))
layers[layers == "NaN"] <- NA
View(layers)
layers <- layers %>%
pivot_wider(
id_cols = c(HWSD2_SMU_ID),
names_from = LAYER,
values_from = all_of(names(layers)[!names(layers) %in% c("HWSD2_SMU_ID", "LAYER")]))
View(layers)
#| echo: false
#| warning: false
# values[values == 7001] <- NA
layers <- read_excel("./HWSD2_LAYERS/hwsd2_layers.xlsx")
smu <- read_excel("./HWSD2_LAYERS/hwsd2_smu.xlsx")
View(values)
View(points)
layers[layers < 0] <- NA
layers <- layers %>%
select(where(is.numeric), LAYER, HWSD2_SMU_ID)
View(layers)
layers <- layers %>%
select(-c(ID, COVERAGE, SEQUENCE, SHARE, ADD_PROP, HWSD1_SMU_ID, ROOT_DEPTH, PHASE1, PHASE2,
ROOTS, IL, SWR, AWC
))
layers <- layers %>%
group_by(LAYER, HWSD2_SMU_ID) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE), .names = "{col}"))
layers[layers == "NaN"] <- NA
layers_wide <- layers %>%
pivot_wider(
id_cols = c(HWSD2_SMU_ID),
names_from = LAYER,
values_from = all_of(names(layers)[!names(layers) %in% c("HWSD2_SMU_ID", "LAYER")]))
View(layers_wide)
View(layers)
layers[layers == "NaN"] <- NA
layers <- layers %>%
select(-c(TEXTURE_USDA))
layers_wide <- layers %>%
pivot_wider(
id_cols = c(HWSD2_SMU_ID),
names_from = LAYER,
values_from = all_of(names(layers)[!names(layers) %in% c("HWSD2_SMU_ID", "LAYER")]))
View(layers_wide)
crop.layers <- merge(values, layers_wide, by="HWSD2_SMU_ID", all.x=TRUE)
View(values)
crop.layers <- merge(values, layers_wide, by.x = "HWSD2", by.y = "HWSD2_SMU_ID", all.x=TRUE)
View(crop.layers)
write.csv(crop.layers, file = "../data/hwsd2.csv", row.names = FALSE)
setwd("E:/SAMS/soil")
write.csv(crop.layers, file = "../data/hwsd2.csv", row.names = FALSE)
write.csv(crop.layers, file = "data/hwsd2.csv", row.names = FALSE)
points <- read.csv("../datasets/R/spam2020V1r0_global_Y_TR.csv")
head(points)
points <- points %>%
select(c(
x, y
))
vec_points <- vect(points, geom = c("x", "y"), crs = "+proj=longlat +datum=WGS84 +no_defs")
values <- extract(hwsd, vec_points)
vec_points <- vect(points, geom = c("x", "y"), crs = "+proj=longlat +datum=WGS84 +no_defs")
values <- extract(hwsd, vec_points)
hwsd <- rast("./HWSD2_RASTER/HWSD2.bil")
print(hwsd)
values <- extract(hwsd, vec_points)
rm(list = ls())
require(sf)
require(terra)
library(readxl)
library(dplyr)
library(tidyr)
round(file.size("./HWSD2_RASTER/hwsd2.bil")/1024^3,2)
file.mtime("./HWSD2_RASTER/hwsd2.bil")
hwsd <- rast("./HWSD2_RASTER/HWSD2.bil")
print(hwsd)
points <- read.csv("../datasets/R/spam2020V1r0_global_Y_TR.csv")
View(points)
points <- points %>%
select(c(
x, y
))
vec_points <- vect(points, geom = c("x", "y"), crs = "+proj=longlat +datum=WGS84 +no_defs")
values <- extract(hwsd, vec_points)
View(points)
vec_points <- vect(points, geom = c("x", "y"), crs = "+proj=longlat +datum=WGS84 +no_defs")
values <- extract(hwsd, vec_points)
View(hwsd)
View(vec_points)
values <- extract(hwsd, vec_points)
values <- extract(hwsd, vec_points)
values <- extract(hwsd, vec_points)
values <- extract(hwsd, vec_points)
View(vec_points)
points <- read.csv("../datasets/A/spam2020V1r0_global_Y_TA.csv")
points <- points %>%
select(c(
x, y
))
vec_points <- vect(points, geom = c("x", "y"), crs = "+proj=longlat +datum=WGS84 +no_defs")
values <- extract(hwsd, vec_points)
points <- read.csv("../datasets/R/spam2020V1r0_global_Y_TR.csv")
vec_points <- vect(points, geom = c("x", "y"), crs = "+proj=longlat +datum=WGS84 +no_defs")
values <- extract(hwsd, vec_points)
View(vec_points)
setwd("E:/SAMS/soil")
require(sf)
require(terra)
library(readxl)
library(dplyr)
library(tidyr)
hwsd <- rast("./HWSD2_RASTER/HWSD2.bil")
print(hwsd)
points <- read.csv("../datasets/R/spam2020V1r0_global_Y_TR.csv")
points <- points %>%
select(c(
x, y
))
vec_points <- vect(points, geom = c("x", "y"), crs = "+proj=longlat +datum=WGS84 +no_defs")
values <- extract(hwsd, vec_points)
vec_points <- vect(points, geom = c("x", "y"), crs = crs(hwsd))
values <- extract(hwsd, vec_points)
values <- extract(hwsd, vec_points)
vec_points <- vect(points, geom = c("x", "y"), crs = crs(hwsd))
values <- extract(hwsd, vec_points)
values <- cbind(points[, c("x", "y")], values)
values <- terra::extract(hwsd, vec_points)
values <- cbind(points[, c("x", "y")], values)
View(values)
nrow(values); ncol(values)
#| echo: false
#| warning: false
# values[values == 7001] <- NA
layers <- read_excel("./HWSD2_LAYERS/hwsd2_layers.xlsx")
smu <- read_excel("./HWSD2_LAYERS/hwsd2_smu.xlsx")
layers[layers < 0] <- NA
layers <- layers %>%
select(where(is.numeric), LAYER, HWSD2_SMU_ID)
layers <- layers %>%
select(-c(ID, COVERAGE, SEQUENCE, SHARE, ADD_PROP, HWSD1_SMU_ID, ROOT_DEPTH, PHASE1, PHASE2,
ROOTS, IL, SWR, AWC
))
layers <- layers %>%
group_by(LAYER, HWSD2_SMU_ID) %>%
summarise(across(everything(), ~ mean(.x, na.rm = TRUE), .names = "{col}"))
layers[layers == "NaN"] <- NA
layers <- layers %>%
select(-c(TEXTURE_USDA))
layers_wide <- layers %>%
pivot_wider(
id_cols = c(HWSD2_SMU_ID),
names_from = LAYER,
values_from = all_of(names(layers)[!names(layers) %in% c("HWSD2_SMU_ID", "LAYER")]))
crop.layers <- merge(values, layers_wide, by.x = "HWSD2", by.y = "HWSD2_SMU_ID", all.x=TRUE)
View(crop.layers)
write.csv(crop.layers, file = "data/hwsd2.csv", row.names = FALSE)
write.csv(layers_wide, file = "data/layers.csv", row.names = FALSE)
points <- read.csv("../datasets/I/spam2020V1r0_global_Y_TI.csv")
head(points)
points <- points %>%
select(c(
x, y
))
vec_points <- vect(points, geom = c("x", "y"), crs = crs(hwsd))
values <- terra::extract(hwsd, vec_points)
values <- cbind(points[, c("x", "y")], values)
crop.layers <- merge(values, layers_wide, by.x = "HWSD2", by.y = "HWSD2_SMU_ID", all.x=TRUE)
write.csv(crop.layers, file = "data/hwsd2.csv", row.names = FALSE)
View(crop.layers)
View(crop.layers)
points <- read.csv("../datasets/I/spam2020V1r0_global_Y_TI.csv")
View(points)
points <- points %>%
select(c(
x, y
))
require(sf)
require(terra)
library(readxl)
library(dplyr)
library(tidyr)
points <- points %>%
select(c(
x, y
))
View(crop.layers)
View(crop.layers)
View(crop.layers)
